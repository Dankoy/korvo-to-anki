plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.diffplug.spotless' version '6.25.0'
}

apply plugin: "io.spring.dependency-management"

group = 'ru.dankoy'
version = '0.2.0-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    springShellVersion = '3.2.5'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.shell:spring-shell-starter'

    implementation 'ch.qos.logback:logback-classic'
    implementation 'ch.qos.logback:logback-core'

    // sqlite with default version from spring boot bom (3.43.2.0) doesn't work with spring boot 3.2.2
    // sqlite version 3.42.1 works with spring boot 3.1.3
    // Working sqlite version with spring boot 3.2.2 is 3.45.1.0
    implementation 'org.xerial:sqlite-jdbc:3.46.0.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.squareup.okhttp3:okhttp'
    implementation 'com.squareup.okhttp3:logging-interceptor'

    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    implementation 'org.flywaydb:flyway-core'
//    implementation 'org.jooq:jooq'

    // freemarker
    implementation 'org.freemarker:freemarker'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.liquibase:liquibase-core'

    // spotless
    implementation 'com.diffplug.spotless:spotless-lib:2.45.0'
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

spotless {
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**'
        }
        toggleOffOn()
        googleJavaFormat('1.19.2')
                .reflowLongStrings()
                .formatJavadoc(true)
                .reorderImports(false)
                .groupArtifact('com.google.googlejavaformat:google-java-format')
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
}
