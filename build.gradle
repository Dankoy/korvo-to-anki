plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.diffplug.spotless' version '6.25.0'
}

apply plugin: "io.spring.dependency-management"

group = 'ru.dankoy'
version = '0.3.2-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    springShellVersion = '3.3.3'
    resilience4jBomVersion = '2.2.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.shell:spring-shell-dependencies:${springShellVersion}"
        mavenBom "io.github.resilience4j:resilience4j-bom:${resilience4jBomVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.shell:spring-shell-starter'

    implementation 'ch.qos.logback:logback-classic'
    implementation 'ch.qos.logback:logback-core'

    // sqlite with default version from spring boot bom (3.43.2.0) doesn't work with spring boot 3.2.2
    // sqlite version 3.42.1 works with spring boot 3.1.3
    // Working sqlite version with spring boot 3.2.2 is 3.45.1.0
    implementation 'org.xerial:sqlite-jdbc:3.47.1.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // okhttp is not a part of spring dependencies BOM. Migrating to WebClient
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    implementation 'org.flywaydb:flyway-core'
//    implementation 'org.jooq:jooq'

    // freemarker
    implementation 'org.freemarker:freemarker'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.liquibase:liquibase-core'

    // spotless
    implementation 'com.diffplug.spotless:spotless-lib:2.45.0'

    // resilence4j
    implementation 'io.github.resilience4j:resilience4j-spring-boot3'
 //   implementation 'io.github.resilience4j:resilience4j-ratelimiter'
    //implementation 'io.github.resilience4j:resilience4j-reactor'
    implementation 'org.springframework.boot:spring-boot-starter-aop' // necessary for annotations
    //implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    afterTest { desc, result ->
        logger.quiet "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

spotless {
    sql {
        target 'src/main/resources/**/*.sql' // have to set manually
        target 'src/test/resources/**/*.sql' // have to set manually

        dbeaver()  // has its own section below
//        prettier(['prettier': '3.0.3', 'prettier-plugin-sql': '0.18.0'])
        // has its own section below
    }
    java {
        target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**'
        }
        toggleOffOn()
        googleJavaFormat('1.19.2')
                .reflowLongStrings()
                .formatJavadoc(true)
                .reorderImports(false)
                .groupArtifact('com.google.googlejavaformat:google-java-format')
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }

    yaml {
        target '.github/**/*.yaml', '.github/**/*.yml'
        jackson()
        prettier()
    }
}
